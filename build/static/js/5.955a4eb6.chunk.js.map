{"version":3,"sources":["components/drums/index.js"],"names":["audioData","display","letter","type","src","keys","Drums","props","state","displayText","handleKeyDown","bind","handleClick","event","key","toUpperCase","includes","document","getElementById","play","this","updateDisplay","pressedHelper","console","log","classList","add","setTimeout","remove","forEach","data","setState","addEventListener","removeEventListener","className","id","DrumPads","React","Component","map","i","onClick"],"mappings":"yNAKMA,G,MAAY,CAChB,CAACC,QAAS,MAAOC,OAAQ,IAAKC,KAAM,YAAaC,IAAK,mBACtD,CAACH,QAAS,UAAWC,OAAQ,IAAKC,KAAM,YAAaC,IAAK,uDAC1D,CAACH,QAAS,UAAWC,OAAQ,IAAKC,KAAM,YAAaC,IAAK,uDAC1D,CAACH,QAAS,OAAQC,OAAQ,IAAKC,KAAM,YAAaC,IAAK,4DACvD,CAACH,QAAS,WAAYC,OAAQ,IAAKC,KAAM,YAAaC,IAAK,4DAC3D,CAACH,QAAS,WAAWC,OAAQ,IAAKC,KAAM,YAAaC,IAAK,4DAC1D,CAACH,QAAS,UAAWC,OAAQ,IAAKC,KAAM,YAAaC,IAAK,2DAC1D,CAACH,QAAS,UAAWC,OAAQ,IAAKC,KAAM,YAAaC,IAAK,2DAC1D,CAACH,QAAS,UAAWC,OAAQ,IAAKC,KAAM,YAAaC,IAAK,6DAGtDC,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEhDC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,YAAa,gCAEf,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBANF,E,2EASLE,GACZ,IAAIX,EAASW,EAAMC,IAAIC,cACnBV,EAAKW,SAASd,KAEDe,SAASC,eAAehB,GAC9BiB,OAETC,KAAKC,cAAcnB,GAEnBkB,KAAKE,cAAcpB,M,kCAIXA,GACVqB,QAAQC,IAAItB,GACGe,SAASC,eAAehB,GAC9BiB,OAETC,KAAKC,cAAcnB,GAEnBkB,KAAKE,cAAcpB,K,oCAGPA,GAEZe,SAASC,eAAe,YAAchB,GAAQuB,UAAUC,IAAI,aAC5DC,YAAW,WACTV,SAASC,eAAe,YAAchB,GAAQuB,UAAUG,OAAO,eAC9D,O,oCAGS1B,GAAS,IAAD,OACpBF,EAAU6B,SAAQ,SAACC,GAAc5B,IAAW4B,EAAK5B,QAC/C,EAAK6B,SAAS,CACZtB,YAAaqB,EAAK7B,e,0CAMtBgB,SAASe,iBAAiB,UAAWZ,KAAKV,iB,6CAI1CO,SAASgB,oBAAoB,UAAWb,KAAKV,iB,+BAI7C,OACE,yBAAKwB,UAAU,UACb,yBAAKC,GAAG,gBACN,wBAAIA,GAAG,UAAUD,UAAU,aAAad,KAAKZ,MAAMC,aACnD,kBAAC2B,EAAD,CAAUxB,YAAaQ,KAAKR,oB,GA9DlByB,IAAMC,WAqE1B,SAASF,EAAS7B,GAChB,OACE,yBAAK2B,UAAU,aACZlC,EAAUuC,KAAI,SAACC,GAAD,OACb,yBAAKL,GAAI,YAAcK,EAAEtC,OAAQY,IAAK0B,EAAEtC,OAAQgC,UAAU,aAAaO,QAAS,kBAAMlC,EAAMK,YAAY4B,EAAEtC,UACvGsC,EAAEtC,OACH,2BAAOiC,GAAIK,EAAEtC,OAASgC,UAAU,UAC9B,4BAAQ9B,IAAKoC,EAAEpC,IAAKD,KAAMqC,EAAErC,aAQzBG","file":"static/js/5.955a4eb6.chunk.js","sourcesContent":["//jshint esversion:6\n\nimport React from 'react';\nimport './index.css';\n\nconst audioData = [\n  {display: \"Dog\", letter: \"Q\", type: \"audio/wav\", src: \"assets/bark.wav\"},\n  {display: \"F Minor\", letter: \"W\", type: \"audio/wav\", src: \"https://www.pacdv.com/sounds/fart-sounds/fart-2.wav\"},\n  {display: \"F Major\", letter: \"E\", type: \"audio/mp3\", src: \"https://www.pacdv.com/sounds/fart-sounds/fart-7.mp3\"},\n  {display: \"Clap\", letter: \"A\", type: \"audio/mp3\", src: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\"},\n  {display: \"Heater 1\", letter: \"S\", type: \"audio/mp3\", src: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\"},\n  {display: \"Heater 2\",letter: \"D\", type: \"audio/mp3\", src: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\"},\n  {display: \"Chord 1\", letter: \"Z\", type: \"audio/mp3\", src: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\"},\n  {display: \"Chord 2\", letter: \"X\", type: \"audio/mp3\", src: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\"},\n  {display: \"Chord 3\", letter: \"C\", type: \"audio/mp3\", src: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\"}\n];\n\nconst keys = [\"Q\", \"W\", \"E\", \"A\", \"S\", \"D\", \"Z\", \"X\", \"C\"];\n\nclass Drums extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayText: \"Click or type to get started\",\n    };\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleKeyDown(event) {\n    let letter = event.key.toUpperCase();\n    if (keys.includes(letter)) {\n      //if key pressed has element - gets audio element and plays sound\n      let currElem = document.getElementById(letter);\n      currElem.play();\n      //update displayText\n      this.updateDisplay(letter);\n      //add and remove pressed class\n      this.pressedHelper(letter);\n    }\n  }\n\n  handleClick(letter) {\n    console.log(letter);\n    let currElem = document.getElementById(letter);\n    currElem.play();\n    //update displayText\n    this.updateDisplay(letter);\n    //add and remove pressed class\n    this.pressedHelper(letter);\n  }\n\n  pressedHelper(letter) {\n    //add and remove pressed class\n    document.getElementById(\"drum-pad-\" + letter).classList.add(\"d-pressed\");\n    setTimeout(() => {\n      document.getElementById(\"drum-pad-\" + letter).classList.remove(\"d-pressed\");\n    }, 200);\n  }\n\n  updateDisplay(letter) {\n    audioData.forEach((data) => {if (letter === data.letter) {\n      this.setState({\n        displayText: data.display,\n      });\n    }});\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  render() {\n    return (\n      <div className=\"d-body\">\n        <div id=\"drum-machine\">\n          <h2 id=\"display\" className=\"d-display\">{this.state.displayText}</h2>\n          <DrumPads handleClick={this.handleClick} />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction DrumPads(props) {\n  return (\n    <div className=\"d-wrapper\">\n      {audioData.map((i) => (\n        <div id={\"drum-pad-\" + i.letter} key={i.letter} className=\"d-drum-pad\" onClick={() => props.handleClick(i.letter)}>\n          {i.letter}\n          <audio id={i.letter}  className=\"d-clip\">\n            <source src={i.src} type={i.type}/>\n          </audio>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Drums;\n"],"sourceRoot":""}